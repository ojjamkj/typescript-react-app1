# 2021.03.12 (출처: https://the-illusionist.me/77 [The Illusionist])
1. 프로젝트 세팅

    1) react프로젝트 생성
        npx create-react-app my-app --typescript
    2) typescript 추가
        npm install typescript @types/node @types/react @types/react-dom @types/jest
    3) js파일의 확장자를 tsx로 변경
    4) npm run start
    5) tsconfig.json 파일이 자동 생성됨

2. 로그인 구현
    1) 참고사이트 : https://www.digitalocean.com/community/tutorials/how-to-add-login-authentication-to-react-applications
    2) npm install react-router-dom @types/react-router-dom 설치
    3) mockup 서버를 위해 npm install --save-dev express cors 설치
    4) mockup 실행을 위해 별도의 콘솔을 띄워 "node server.js" 수행

==> 배운것
    useState, useState를 이용한 customHook 구현


# 2021.03.15 
1. router를 가지고 놀아 보자. 사용법상의 큰 차이는 못 느끼겠다.
    1) Browser router
    2) Hash router 


# 2021.03.17
1. fetch vs axios (https://liante0904.tistory.com/171)
    1) axios로 호출을 하면 cross origin 에러가 발생
        package.json에 proxy를 주면 된다고 해서 주었으면 마찬가지로 계속 오류가 났다.
        내일 다시 시도해 보자. axios api부터 봐야 겠다.

    https://jasonwatmore.com/post/2020/07/17/react-axios-http-post-request-examples


# 2021.03.19
1. axios cross origin 에러 발생
    1) fetch와 비교한 axios의 장점은 request의 파라미터와 response의 데이터를 자동으로 json으로 변형해 준다는 점. 

# 2021.03.20
1. axios로 가져온 menuData를 메뉴로 transform하는 방법을 아직 모른다.
    1) array를 가져와 map 으로 for문을 돌리고 싶은데 map을 쓰지 못한다.

# 2021.03.21
    1) async, await를 아직도 완벽히 이해하지 못하고 있는 것 같다.
    2) Navigation을 fetch해서 가져오면서 useState, useEffect 훅까지 공부를 하게 됐다.
    3) useEffect 사용시 react life cycle 및 사용법을 제대로 모르면 무한루프에 빠지게 된다. 조심하다. useEffect는 마지막 인자로 
       넘겨준 변수가 바뀌었을때 다시 rendering된다는 점 주의.

# 2021.03.23
    1) electron 모듈 설치를 위해 "npm install electron --save-dev" 명령어 수행
    2) https://www.freecodecamp.org/news/building-an-electron-application-with-create-react-app-97945861647c/
    3) 실행순서
        - node server.js
        - npm run
        - npm run electron-dev
    4) 개발편의성을 위해 "npm install --save-dev foreman" 설치했지만 잘 되지 않았다.. 다시 시도해 보자

# 2021.03.28
    1) 개발편의성을 개선을 위해 "Foremen" 설치 (npm install --save-dev foreman)
    2) Procfile-initial.js 파일을 이용해서 npm 시작 커맨드를 날리고 React dev server가 시작되면 electron을 실행시킨다.
    3) foreman을 아직 잘 모르겠다. 학습하면서 좀더 찾아보자.
    4) foreman은 node foreman으로 불리고 프로세스 관리 툴인것 같다.
    5) 이제 기동은 "npm run dev"로 한다.
# 2021.03.28
    1) react app에서 electron을 연결하기 위해 import를 시도 했고, 일단 api를 사용해서 로컬파일 목록을 표시해 보자.
    2) 로컬디렉토리 파일을 읽어서 console.log에 표시하는 것 까지는 됐다.
    3) react파일에서 node api를 사용하는 법을 잘 몰라서 하루를 까먹었다. 
    
# 2021.03.30
    1) devextreme 라이브러리 추가 (npm install devextreme@20.2 devextreme-react@20.2 --save --save-exact)
    2) layout을 잡아야 한다.


========================================================================================    

# 2021.MM.dd 
(https://2ssue.github.io/programming/electron-react/)
1) electron 추가


#https://velog.io/@velopert/using-hooks-with-typescript
#https://www.storyblok.com/tp/react-dynamic-component-from-json
#react에 대해 참고할 만한 사이트 : https://react.vlpt.us/basic/16-useEffect.html
